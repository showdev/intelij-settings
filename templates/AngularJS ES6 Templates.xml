<templateSet group="AngularJS ES6 Templates">
  <template name="ngapp" value="export const $moduleVar$ = angular&#10;    .module('$moduleName$', [&#10;        '$dependency$'$END$&#10;    ])&#10;&#10;    .name;" description="Creates an ES6 Angular module setter" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="moduleVar" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="moduleName" expression="" defaultValue="&quot;moduleName&quot;" alwaysStopAt="true" />
    <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ngconfig" value=".config($config$)&#10;&#10;/* @ngInject */&#10;function $config$ ($dependency$) {&#10;    $configFunction$&#10;}$END$" description="Defines an ES6 configuration phase function" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="config" expression="" defaultValue="&quot;config&quot;" alwaysStopAt="true" />
    <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true" />
    <variable name="configFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngcontroller" value="export function $ControllerName$ ($dependency$) {&#10;    'ngInject';&#10;}&#10;&#10;$END$" description="Creates an ES6 Angular controller" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true" />
    <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngdirective" value="import angular from 'angular';&#10;&#10;/* @ngInject */&#10;function $directiveName$($dependency$) {&#10;    let directive = {&#10;        bindToController: true,&#10;        controller: $ControllerName$,&#10;        controllerAs: 'vm',&#10;        link: link,&#10;        restrict: 'A',&#10;        scope: {}&#10;    };&#10;    return directive;&#10;&#10;    function link(scope, element, attrs) {&#10;        $linkFunction$&#10;    }&#10;}&#10;&#10;class HomeController {&#10;    /* @ngInject */&#10;    constructor($dependency$) {&#10;         $ControllerNameConstructor$&#10;    }&#10;    &#10;    changeName() {&#10;         $ControllerNameFunction$&#10;    }&#10;}&#10;&#10;export default angular&#10;    .module('$moduleName$')&#10;    .directive('$directiveName$', $directiveName$)&#10;    .name;&#10;&#10;$END$" description="Creates an ES6 Angular directive" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="directiveName" expression="" defaultValue="&quot;directiveName&quot;" alwaysStopAt="true" />
    <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true" />
    <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true" />
    <variable name="linkFunction" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ControllerNameConstructor" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ControllerNameFunction" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngroute" value=".when('/$url$', {&#10;    template: require('$template$.html'),&#10;    controller: '$ControllerName$',&#10;    controllerAs: '$vm$'&#10;})$END$" description="Defines an ES6 Angular ngRoute 'when' definition" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="url" expression="" defaultValue="&quot;url&quot;" alwaysStopAt="true" />
    <variable name="template" expression="" defaultValue="&quot;template&quot;" alwaysStopAt="true" />
    <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true" />
    <variable name="vm" expression="" defaultValue="&quot;vm&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngrun" value=".run(run$runName$)&#10;&#10;/* @ngInject */&#10;function run$runName$ ($dependency$) {&#10;    $runNameFunction$&#10;}$END$" description="Defines a ES6 run phase function" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="runName" expression="" defaultValue="&quot;Name&quot;" alwaysStopAt="true" />
    <variable name="dependency" expression="" defaultValue="&quot;dependency&quot;" alwaysStopAt="true" />
    <variable name="runNameFunction" expression="" defaultValue="&quot;code&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngservice" value="export class $ServiceName$ {&#10;  /* @ngInject */&#10;  constructor() {&#10;    $constructor$&#10;  }&#10;&#10;  $functionName$() {&#10;     $functionNameFunction$&#10;  }&#10;}&#10;  &#10;$END$" description="Creates an ES6 Angular service" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="constructor" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="functionName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="functionNameFunction" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ServiceName" expression="" defaultValue="&quot;ServiceName&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngstate" value=".state('$state$', {&#10;    url: '/$url$',&#10;    template: require('$template$.html'),&#10;    controller: '$ControllerName$',&#10;    controllerAs: '$vm$'&#10;})$END$" description="Creates an ES6 Angular UI Router state defintion" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="state" expression="" defaultValue="&quot;state&quot;" alwaysStopAt="true" />
    <variable name="url" expression="" defaultValue="&quot;url&quot;" alwaysStopAt="true" />
    <variable name="template" expression="" defaultValue="&quot;template&quot;" alwaysStopAt="true" />
    <variable name="ControllerName" expression="" defaultValue="&quot;ControllerName&quot;" alwaysStopAt="true" />
    <variable name="vm" expression="" defaultValue="&quot;vm&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ngcomponent" value="import templateUrl from '$templatePath$';&#10;&#10;export const $ComponentName$ = {&#10;  templateUrl&#10;};" description="Creates an ES6 Angular component" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="templatePath" expression="" defaultValue="&quot;temlatePath&quot;" alwaysStopAt="true" />
    <variable name="ComponentName" expression="" defaultValue="&quot;ComponentName&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>